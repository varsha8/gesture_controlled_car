// for the obstacle detector part
int trigpin = 9;
int echopin = 10;
int buzzpin = 12;

void setup() {
  // put your setup code here, to run once:
  pinMode(trigpin, OUTPUT);
  pinMode(echopin , INPUT);
  pinMode(buzzpin , OUTPUT);
  Serial.begin(9600);
}

void loop() {
  // put your main code here, to run repeatedly:
  digitalWrite( trigpin , LOW);
  delayMicroseconds(2);
  digitalWrite( trigpin , HIGH);
  delayMicroseconds(10);
  digitalWrite( trigpin , LOW);

  int duration = pulseIn( echopin , HIGH);

  int distance = (0.034*duration)/2;

  if (distance <=5 )
  {
    digitalWrite(buzzpin , HIGH);
  }
  else
    digitalWrite( buzzpin , LOW);

  Serial.println(duration);
  delay(1000);

}

// transmitter code
#include<VirtualWire.h>
char *message = "Xyz";
int xpin = A3;
int ypin = A2;
int zpin = A1;
int led1 = 13;
int led2 = 11;
int led3 = 10;

void setup() 
{
  // put your setup code here, to run once: 
  pinMode(led1 , OUTPUT);
  pinMode( led2 , OUTPUT);
  pinMode( led3 , OUTPUT);
  vw_set_ptt_inverted(true);
  vw_set_tx_pin(12);
  vw_setup(1000);
  Serial.begin(9600);
}

void loop()
{
  // put your main code here, to run repeatedly:
  Serial.print(analogRead(xpin));
  // print a tab between values:
  Serial.print("\t");
  Serial.print(analogRead(ypin));
  int val = analogRead(ypin);
  // print a tab between values:
  Serial.print("\t");
  Serial.print(analogRead(zpin));
  Serial.println();
  // delay before next reading:
  delay(100);
  if( val >350)
  {
    message = "X";
    vw_send((uint8_t *)message , strlen(message));
    vw_wait_tx();
    digitalWrite( led1 , HIGH);
    digitalWrite(led2 , LOW);
    digitalWrite( led3 , LOW);
    delay(2000);
  }
  else
  if( val <= 150)
  {
    message = "Y";
    vw_send((uint8_t *)message , strlen(message));
    vw_wait_tx();
    digitalWrite( led1 , LOW);
    digitalWrite( led2 , LOW);
    digitalWrite( led3 , HIGH);
    delay(2000);
  }
  else
  {
    message = "Z";
    vw_send((uint8_t *)message , strlen(message));
    vw_wait_tx();
    digitalWrite( led1 , LOW);
    digitalWrite( led2 , HIGH);
    digitalWrite( led3 , LOW);
    delay(2000);
    
  }
   
}

// receiver code
#include<VirtualWire.h>

//int ledpassive = 5;
int led1 = 10;
int led2 = 11;
int led3 = 9;
int led4 = 6;
int hipin = 13;

void setup() {
  // put your setup code here, to run once:
 
  pinMode( led1 , OUTPUT);
  pinMode( led2 , OUTPUT);
  pinMode( led3 , OUTPUT);
  pinMode( led4 , OUTPUT);
  pinMode( hipin , OUTPUT);
  vw_set_ptt_inverted(true);
  vw_set_rx_pin(12);
  vw_setup(1000);
  vw_rx_start();
  Serial.begin(9600);
  digitalWrite( hipin , HIGH);
}
void loop() 
{
  // put your main code here, to run repeatedly:
  
  digitalWrite( led1 , LOW);
  digitalWrite( led2 , LOW);
  digitalWrite( led3 , LOW);
  digitalWrite( led4 , LOW);
  
  uint8_t buf[VW_MAX_MESSAGE_LEN];
  uint8_t buflen = VW_MAX_MESSAGE_LEN;
  
  if( vw_get_message( buf, &buflen))
  {
    //Serial.println(*buf);
    //buf[0]='X';
    if( buf[0]=='X')
    {
        Serial.print(*buf);
        digitalWrite(led1 , HIGH);
        digitalWrite( led2 , LOW);
        digitalWrite( led3 , HIGH); 
        digitalWrite( led4 , LOW);  
    }
    else
    if( buf[0]=='Y')
    {
        Serial.print(*buf);
        digitalWrite(led1 , LOW);
        digitalWrite( led2 , HIGH);
        digitalWrite( led3 , LOW);
        digitalWrite( led4 , HIGH);   
    }
    else
    if( buf[0]=='Z')
    {
        Serial.print(*buf);
        digitalWrite(led1 , LOW);
        digitalWrite( led2 , LOW);
        digitalWrite( led3 , LOW); 
        digitalWrite( led4 , LOW);  
    }
    delay(5000);
  }   // end vm messaage
}   // end loop